
@{
    ViewBag.Title = "PostBook";
}
@model ResourceBox.Models.ViewModel
@Styles.Render("~/Content/css/profile")
<style>
    .modal-lg {
        max-width: 35% !important;
    }

</style>
<div class="container-fluid mt-3">
    <div class="row ">
        <div class=" col-lg-3">
            <div class="list-group homeText" id="categoryList">
                <a href="" style="text-decoration: none;" class="list-group-item list-group-item list-group-item-dark">My Profile</a>
                <a href="" style="text-decoration: none;" class="list-group-item list-group-item-dark">My Sell Posts</a>
                <a href="" style="text-decoration: none;" class="list-group-item list-group-item-dark">Profile Settings</a>
                <a href="" style="text-decoration: none;" class="list-group-item list-group-item-dark">My Messeages </a>
            </div>
        </div>
        <div class=" col-lg-7 autoMargin">
            <p class="h1 mt-4 mb-4 homeText" style="text-align: center;font-weight: bold;">My Portal</p>
            <p class="h2 mt-4 mb-4 homeText" style="text-align: center;font-weight: bold;">Books</p>
            <div class="row">
                @foreach (var userBooks in Model.Books.Where(i => i.userIdFK == Convert.ToInt32(Session["userId"])))
                {
                    <div class="col-md-3">
                        <div class="card card-default mt-4 mb-3 d-flex">
                            <img src="@Url.Content(userBooks.bookImage)" runat="server" alt="@userBooks.bookName" style="width:100%;height: 180px;">
                            <div class="mt-auto ">
                                <h5 class="mt-2 homeText">@userBooks.bookName</h5>
                                <p class="price homeText">@userBooks.bookPrice taka</p>
                                <p class="homeText">@userBooks.bookAuthor</p>
                                <p class="mt-auto"><button class="buttonEdit" onclick="ShowAlertEdit()">Edit</button></p>
                                <form id="bookDeleteForm" action="@Url.Action("DeleteBook","User",new { bookId=userBooks.bookID})" method="post">
                                    <p class="mt-auto"><button class="buttonDelete" type="button" onclick="ShowAlertWarning()">Delete</button></p>
                                </form>
                            </div>
                        </div>
                    </div>
                }

                <div class="col-md-3 d-flex">
                    <div class="card card-default mt-4 mb-3">
                        <a href="" data-toggle="modal" data-target="#modalAddBook"><img class="mt-4 plusImage" src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Plus_symbol.svg/1200px-Plus_symbol.svg.png" alt=""></a>
                        <h5 class="mt-4"><b>Add Content</b></h5>
                        <p class="mt-auto"><button class="buttonOpen" data-toggle="modal" data-target="#modalAddBook">Open</button></p>
                    </div>
                </div>
            </div>

        </div>
        <div class="modal fade" id="modalAddBook" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100 font-weight-bold">Book Description</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form id="myForm" action="@Url.Action("PostBook", "User")" method="post" enctype="multipart/form-data">

                        <div class="modal-body mx-3">

                            <div class="form-group">
                                <label for="name">Name</label>
                                <input class="form-control" type="text" name="name" placeholder="Enter Name">
                            </div>
                            <div class="form-group">
                                <label for="Author">Author</label>
                                <input class="form-control" type="text" name="author" placeholder="Author Name">
                            </div>
                            <div class="form-group">
                                <label for="Price">Price</label>
                                <input class="form-control" type="text" name="price" placeholder="Price">
                            </div>
                            <div class="form-group">
                                <label for="Release Date">Release Date</label>
                                <input class="form-control" name="release_date" type="date" value="2011-08-19" id="example-date-input">
                            </div>
                            <div class="form-group">
                                <label for="Category">Book Category</label>
                                <select class="form-control" name="category" id="category">
                                    <option>Sci-fi</option>
                                    <option>Education</option>
                                    <option>Paranormal</option>
                                    <option>Bangla</option>
                                    <option>Literature</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="Category">Select Department</label>
                                <select class="custom-select" name="department" aria-label="Default select example">
                                    <option selected value="0">Select Your Department</option>
                                    <option value="CSE">Computer Science</option>
                                    <option value="EEE">Electrical</option>
                                    <option value="CIVIL">Civil</option>
                                    <option value="MECHANICAL">Mechanical</option>
                                    <option value="IPE">IPE</option>
                                    <option value="WRE">WRE</option>
                                    <option value="School">School</option>
                                    <option value="College">College</option>
                                    <option value="Others">Others</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="Location">Pickup Location</label>
                                <input class="form-control" type="text" id="setLocation" name="location" placeholder="Set A Pickup Location">
                                <button class="btn btn-primary mt-1" type="button" id="locate" onclick="getLocation()">Set Current Location</button>
                                <input type="hidden" name="lattitude" value="0" id="lattitude" />
                                <input type="hidden" name="longitude" value="0" id="longitude" />
                            </div>
                            <div class="form-group">
                                <label for="Image">Upload Image</label>
                                <input type="file" id="myFile" name="image">
                            </div>


                        </div>


                        <div class="modal-footer d-flex justify-content-center">
                            <button class="btn btn-success mt-2" type="submit" onclick="getModal()">Post</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
</div>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
@if (ViewBag.postSuccess != null && ViewBag.postSuccess)
{
    <script>
        Swal.fire(
            'Good job!',
            'You have successfully posted a book!',
            'success'
        )
    </script>
}

@if (ViewBag.postFailed != null && ViewBag.postFailed)
{
    <script>

    Swal.fire({
        icon: 'error',
        title: '@ViewBag.Alert',
        text: '@ViewBag.Message',
        footer: '<a href>Why do I have this issue?</a>'
    })
    </script>
}

<script>
    function ShowAlertEdit() {
        Swal.fire({
            title: 'Do you want to save the changes?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: `Save`,
            denyButtonText: `Don't save`,
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                Swal.fire('Saved!', '', 'success')
            } else if (result.isDenied) {
                Swal.fire('Changes are not saved', '', 'info')
            }
        })
    }
    function ShowAlertWarning()
    {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire(
                    'Deleted!',
                    'Your book has been deleted.',
                    'success'
                ).then(function () {
                    document.getElementById("bookDeleteForm").submit();
                });
            }
        })
    }
</script>

<script>
    function getModal() {

        document.getElementById("myForm").submit();

    }
</script>

<script>
    var x = document.getElementById("setLocation");

    function getLocation() {

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        position.enableHighAccuracy = true;
        x.innerHTML = "Latitude: " + position.coords.latitude +
            "<br>Longitude: " + position.coords.longitude;

        var apikey = 'c1e72ba1314f41719598a10e23f3f7dd';
        var latitude = '51.0';
        var longitude = '7.0';

        var api_url = 'https://api.opencagedata.com/geocode/v1/json'

        var request_url = api_url
            + '?'
            + 'key=' + apikey
            + '&q=' + encodeURIComponent(position.coords.latitude + ',' + position.coords.longitude)
            + '&pretty=1'
            + '&no_annotations=1';
        //x.innerHTML=request_url;
        $.get({
            url: request_url,
            success: function (data) {
                console.log(data);
                x.innerHTML = data.results[0].formatted;
                document.getElementById("setLocation").value = data.results[0].formatted;
                var lat = position.coords.latitude;
                var long = position.coords.longitude;
                document.getElementById("lattitude").value = lat;
                document.getElementById("longitude").value = long;

            }


        });
    }
</script>



