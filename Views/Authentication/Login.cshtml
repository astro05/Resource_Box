
@{
    ViewBag.Title = "Login";
}
@Styles.Render("~/Content/css/login")
<div class="container c">
    <div class="row" id="customForm">
        <div class="col-md-3"></div>
        <div class="col-md-5 ml-5 mt-4">


            <form id="form" class="f mt-5" action="@Url.Action("Login", "Authentication")" method="post">
                <div class="h2 mb-4 homeText" style="text-align: center; font-weight: bold; font-size:35px;">Login</div>
                <div class="h3 text-center mt-3 "><i class="far fa-user fa-3x"></i></div>
                <div class="fm mt-4">
                    <label for="email">Email</label>
                    <input type="text" placeholder="Enter Your Valid Email" id="email" name="email" />
                    <i class="fas fa-check-circle"></i>
                    <i class="fas fa-exclamation-circle"></i>
                    <small>Error message</small>
                </div>


                <div class="fm">
                    <label for="username">Password</label>
                    <input type="password" placeholder="Enter Your Password" id="password" name="password" />
                    <i class="fas fa-check-circle"></i>
                    <i class="fas fa-exclamation-circle"></i>
                    <small>Error message</small>
                </div>

                <button class="btn btn-success">Login</button>
                <div class="mt-2" style="text-align: center"> Dont have a account ? <a class="text-danger" href="@Url.Action("Registration", "Authentication")">Sign Up</a> </div>
                <div class="mt-1" style="text-align: center">  <a class="text-danger">Forget Password</a> </div>
            </form>
        </div>
    </div>
</div>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
var verification = @ViewBag.verification.ToString().ToLower();


    if (verification)
    {
        alertLoginFailed();
        setErrorFor(email, 'Email does not match.');
        setErrorFor(password, 'Password does not match.');
       
    }

    function setErrorFor(input, message) {
	const formControl = input.parentElement;
	const small = formControl.querySelector('small');
	formControl.className = 'fm error';
	small.innerText = message;
}

function setSuccessFor(input) {
	const formControl = input.parentElement;
	formControl.className = 'fm success';
}
    function alertLoginFailed() {
        const Toast = Swal.mixin({
            toast: true,
            position: 'bottom-start',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: false,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({
            icon: 'error',
            title: 'Login Failed!'
        })
    }
</script>


@Scripts.Render("~/bundles/login")

